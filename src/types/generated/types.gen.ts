// This file is auto-generated by @hey-api/openapi-ts

export type _401Unauthorized = {
  message?: string
  error_code?: string
}

export type _400BadRequest = {
  message?: string
  error_code?: string
}

export type _500InternalServerError = {
  message?: string
  error_code?: string
}

export type Asset = {
  type?: 'Image' | 'Video'
  url?: string
}

export type FacebookPost = {
  type: 'story' | 'reel' | 'post'
  content: string
  assets?: Array<Asset>
}

export type TiktokPost = {
  type: 'story' | 'post'
  content?: string
  assets: Array<Asset>
}

export type SocialPostCreation = {
  platform: 'facebook' | 'tiktok' | 'threads'
  socialCredentialID: string
  metadata: FacebookPost | TiktokPost
}

export type ScheduleCreation = {
  publicationTime: string
  socialPosts: Array<SocialPostCreation>
}

export type _200ScheduleSuccessResponse = {
  [key: string]: unknown
}

export type ThreadsPost = {
  type?: 'carousel'
  content?: string
  assets?: Array<Asset>
}

export type SocialPost = {
  id: string
  ownerID: string
  platform: 'facebook' | 'tiktok' | 'threads'
  status?: 'published' | 'scheduled' | 'failed'
  publicationTime?: string
  socialCredentialID: string
  metadata: FacebookPost | TiktokPost | ThreadsPost
}

export type FacebookPageCredentialViewModel = {
  /**
   * Facebook page ID
   */
  page_id?: string
  /**
   * Facebook page name
   */
  page_name?: string
}

export type ThreadsCredentialViewModel = {
  /**
   * Threads username
   */
  username?: string
  /**
   * Threads ID
   */
  id?: string
  /**
   * Threads profile picture URL
   */
  threads_profile_picture_url?: string
}

export type FacebookPageMetadataViewModel = {
  /**
   * Facebook page ID
   */
  page_id?: string
  /**
   * Facebook page name
   */
  page_name?: string
  /**
   * Facebook amount of likes
   */
  fan_count?: number
  picture?: {
    height?: number
    width?: number
    url?: string
  }
}

export type SocialCredentialViewModel = {
  /**
   * Social credential ID
   */
  id: string
  /**
   * User ID
   */
  ownerID: string
  /**
   * Social platform
   */
  platform: string
  /**
   * Social credential
   */
  credential: FacebookPageCredentialViewModel | ThreadsCredentialViewModel
  /**
   * Social metadata
   */
  metadata?: FacebookPageMetadataViewModel
}

export type FacebookPageCredentialCreation = {
  /**
   * Facebook page ID
   */
  page_id: string
  /**
   * Facebook page name
   */
  page_name: string
  /**
   * Facebook page access token
   */
  access_token: string
}

export type ThreadsCredentialCreation = {
  /**
   * Threads API code
   */
  code: string
  /**
   * RedirectURI at authorization redirection phase
   */
  redirectURI: string
}

export type SocialCredentialCreation = {
  /**
   * Social platform
   */
  platform: 'facebook' | 'threads'
  /**
   * Social credentials
   */
  credential: FacebookPageCredentialCreation | ThreadsCredentialCreation
}

export type SocialCredentialCreationMultiple = Array<SocialCredentialCreation>

export type CreatePostData = {
  body?: ScheduleCreation
  path?: never
  query?: never
  url: '/api/v1/schedule'
}

export type CreatePostErrors = {
  /**
   * Bad Request
   */
  400: _400BadRequest
  /**
   * Unauthorized
   */
  401: _401Unauthorized
  /**
   * Internal Server Error
   */
  500: _500InternalServerError
}

export type CreatePostError = CreatePostErrors[keyof CreatePostErrors]

export type CreatePostResponses = {
  /**
   * Created
   */
  201: _200ScheduleSuccessResponse
}

export type CreatePostResponse = CreatePostResponses[keyof CreatePostResponses]

export type GetPostsData = {
  body?: never
  path?: never
  query?: {
    /**
     * Platform to filter posts by
     */
    platform?: 'facebook'
    /**
     * Filter posts by publication start date
     */
    publicationStartDate?: string
    /**
     * Filter posts by publication end date
     */
    publicationEndDate?: string
  }
  url: '/api/v1/posts'
}

export type GetPostsErrors = {
  /**
   * Bad Request
   */
  400: _400BadRequest
  /**
   * Unauthorized
   */
  401: _401Unauthorized
  /**
   * Internal Server Error
   */
  500: _500InternalServerError
}

export type GetPostsError = GetPostsErrors[keyof GetPostsErrors]

export type GetPostsResponses = {
  /**
   * OK
   */
  200: Array<SocialPost>
}

export type GetPostsResponse = GetPostsResponses[keyof GetPostsResponses]

export type GetSocialCredentialsData = {
  body?: never
  path?: never
  query?: {
    platform?: 'facebook' | 'thread'
  }
  url: '/api/v1/social-credentials'
}

export type GetSocialCredentialsErrors = {
  /**
   * Bad Request
   */
  400: _400BadRequest
  /**
   * Unauthorized
   */
  401: _401Unauthorized
  /**
   * Internal Server Error
   */
  500: _500InternalServerError
}

export type GetSocialCredentialsError = GetSocialCredentialsErrors[keyof GetSocialCredentialsErrors]

export type GetSocialCredentialsResponses = {
  /**
   * OK
   */
  200: Array<SocialCredentialViewModel>
}

export type GetSocialCredentialsResponse = GetSocialCredentialsResponses[keyof GetSocialCredentialsResponses]

export type CreateSocialCredentialData = {
  body?: SocialCredentialCreationMultiple
  path?: never
  query?: never
  url: '/api/v1/social-credentials'
}

export type CreateSocialCredentialErrors = {
  /**
   * Bad Request
   */
  400: _400BadRequest
  /**
   * Unauthorized
   */
  401: _401Unauthorized
  /**
   * Internal Server Error
   */
  500: _500InternalServerError
}

export type CreateSocialCredentialError = CreateSocialCredentialErrors[keyof CreateSocialCredentialErrors]

export type CreateSocialCredentialResponses = {
  /**
   * Created
   */
  201: SocialCredentialViewModel
}

export type CreateSocialCredentialResponse = CreateSocialCredentialResponses[keyof CreateSocialCredentialResponses]

export type GetSocialCredentialInformationData = {
  body?: never
  path: {
    /**
     * The ID of the social credential
     */
    socialCredentialID: string
  }
  query?: {
    reload?: boolean
  }
  url: '/api/v1/social-credentials/{socialCredentialID}'
}

export type GetSocialCredentialInformationErrors = {
  /**
   * Bad Request
   */
  400: _400BadRequest
  /**
   * Unauthorized
   */
  401: _401Unauthorized
  /**
   * Internal Server Error
   */
  500: _500InternalServerError
}

export type GetSocialCredentialInformationError =
  GetSocialCredentialInformationErrors[keyof GetSocialCredentialInformationErrors]

export type GetSocialCredentialInformationResponses = {
  /**
   * OK
   */
  200: Array<SocialCredentialViewModel>
}

export type GetSocialCredentialInformationResponse =
  GetSocialCredentialInformationResponses[keyof GetSocialCredentialInformationResponses]
