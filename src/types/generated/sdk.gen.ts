// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch'

import type {
  CreatePostData,
  CreatePostError,
  CreatePostResponse,
  CreateSocialCredentialData,
  CreateSocialCredentialError,
  CreateSocialCredentialResponse,
  GetPostsData,
  GetPostsError,
  GetPostsResponse,
  GetSocialCredentialInformationData,
  GetSocialCredentialInformationError,
  GetSocialCredentialInformationResponse,
  GetSocialCredentialsData,
  GetSocialCredentialsError,
  GetSocialCredentialsResponse
} from './types.gen'

export const client = createClient(createConfig())

/**
 * Create a new post
 */
export const createPost = <ThrowOnError extends boolean = false>(options?: Options<CreatePostData, ThrowOnError>) => {
  return (options?.client ?? client).post<CreatePostResponse, CreatePostError, ThrowOnError>({
    security: [
      {
        scheme: 'bearer',
        type: 'http'
      }
    ],
    url: '/api/v1/schedule',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * Get all posts
 */
export const getPosts = <ThrowOnError extends boolean = false>(options?: Options<GetPostsData, ThrowOnError>) => {
  return (options?.client ?? client).get<GetPostsResponse, GetPostsError, ThrowOnError>({
    security: [
      {
        scheme: 'bearer',
        type: 'http'
      }
    ],
    url: '/api/v1/posts',
    ...options
  })
}

/**
 * Get all social credentials
 */
export const getSocialCredentials = <ThrowOnError extends boolean = false>(
  options?: Options<GetSocialCredentialsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<GetSocialCredentialsResponse, GetSocialCredentialsError, ThrowOnError>({
    security: [
      {
        scheme: 'bearer',
        type: 'http'
      }
    ],
    url: '/api/v1/social-credentials',
    ...options
  })
}

/**
 * Create a new social credential
 */
export const createSocialCredential = <ThrowOnError extends boolean = false>(
  options?: Options<CreateSocialCredentialData, ThrowOnError>
) => {
  return (options?.client ?? client).post<CreateSocialCredentialResponse, CreateSocialCredentialError, ThrowOnError>({
    security: [
      {
        scheme: 'bearer',
        type: 'http'
      }
    ],
    url: '/api/v1/social-credentials',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * Get social credentials information
 */
export const getSocialCredentialInformation = <ThrowOnError extends boolean = false>(
  options: Options<GetSocialCredentialInformationData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetSocialCredentialInformationResponse,
    GetSocialCredentialInformationError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http'
      }
    ],
    url: '/api/v1/social-credentials/{socialCredentialID}',
    ...options
  })
}
